from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Router
import asyncio
import config

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=config.BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(commands=["start"])
async def start_handler(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞.\n–ù–∞–∂–º–∏ /earn —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è.")

# –ö–æ–º–∞–Ω–¥–∞ /earn
@router.message(commands=["earn"])
async def earn_handler(message: Message):
    links = [
        "<b>üì± Honeygain</b>: <a href='https://r.honeygain.me/DATELCF308'>–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ</a>",
        "<b>üí∞ FaucetPay</b>: <a href='https://faucetpay.io/?r=9207641'>–ü–æ–ª—É—á–∞—Ç—å –∫—Ä–∏–ø—Ç—É</a>"
    ]
    await message.answer("\n\n".join(links), disable_web_page_preview=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if name == "__main__":
    asyncio.run(main())
